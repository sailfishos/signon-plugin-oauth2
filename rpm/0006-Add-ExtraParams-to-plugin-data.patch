From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tomi=20Lepp=C3=A4nen?= <tomi.leppanen@jolla.com>
Date: Mon, 3 Oct 2022 15:10:32 +0300
Subject: [PATCH] Add ExtraParams to plugin data
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This allows sending non-standard query items to server. For example
Microsoft identity platform uses this to know that it should prompt user
to select account.

Signed-off-by: Tomi Lepp√§nen <tomi.leppanen@jolla.com>
---
 src/oauth2data.h     | 5 +++++
 src/oauth2plugin.cpp | 8 ++++++++
 2 files changed, 13 insertions(+)

diff --git a/src/oauth2data.h b/src/oauth2data.h
index da154f643552dad6ac425ed26ed3c3afebde23d2..31184974f2cd25be7df5483415496a13f9df2cf0 100644
--- a/src/oauth2data.h
+++ b/src/oauth2data.h
@@ -124,6 +124,11 @@ namespace OAuth2PluginNS {
          * query component of the token endpoint URI
          */
         SIGNON_SESSION_DECLARE_PROPERTY(QString, TokenQuery);
+
+        /*!
+         * Any extra (non standard) parameters to send to the endpoint URI
+         */
+        SIGNON_SESSION_DECLARE_PROPERTY(QVariantMap, ExtraParams);
     };
 
     class OAuth2PluginTokenData : public SignOn::SessionData
diff --git a/src/oauth2plugin.cpp b/src/oauth2plugin.cpp
index af3ca32b135ae00e4683d14b26a013a8c6011807..561c222bccbc938f2ee878a5e7bea25c13ea06da 100644
--- a/src/oauth2plugin.cpp
+++ b/src/oauth2plugin.cpp
@@ -191,6 +191,14 @@ void OAuth2Plugin::sendOAuth2AuthRequest()
         // Passing list of scopes
         url.addQueryItem(SCOPE, QUrl::toPercentEncoding(scopes.join(" ")));
     }
+    /* If there are extra parameters provided, apply those to the request.
+     * This allows to instruct the website to require login for example. */
+    QVariantMap extraParams = d->m_oauth2Data.ExtraParams();
+    if (!extraParams.isEmpty()) {
+        for (QVariantMap::const_iterator it = extraParams.constBegin(); it != extraParams.constEnd(); ++it) {
+            url.addQueryItem(it.key(), QUrl::toPercentEncoding(it.value().toString()));
+        }
+    }
     TRACE() << "Url = " << url.toString();
     SignOn::UiSessionData uiSession;
     uiSession.setOpenUrl(url.toString());
